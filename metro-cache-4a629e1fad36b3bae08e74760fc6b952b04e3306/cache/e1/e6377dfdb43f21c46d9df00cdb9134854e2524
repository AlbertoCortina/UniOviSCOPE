__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _jsxFileName = "/home/alberto/Git/UniOviSCOPE/app/components/screens/certify-qr-screen.js",
        _class,
        _temp2;

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _reactNativeCamera = _require(_dependencyMap[3], "react-native-camera");

    var _nativeBase = _require(_dependencyMap[4], "native-base");

    var _styles = _require(_dependencyMap[5], "../../resources/styles");

    var _i18n = _require(_dependencyMap[6], "../../resources/i18n");

    var _i18n2 = _interopRequireDefault(_i18n);

    var _sideMenu = _require(_dependencyMap[7], "../custom/sideMenu");

    var _sideMenu2 = _interopRequireDefault(_sideMenu);

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        CertifyQRScreen: {
            displayName: "CertifyQRScreen"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/alberto/Git/UniOviSCOPE/app/components/screens/certify-qr-screen.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var widthscreen = _reactNative.Dimensions.get('window').width;

    var heightscreen = _reactNative.Dimensions.get('window').height;

    var CustomHeader = function CustomHeader(_ref) {
        var title = _ref.title,
            subtitle = _ref.subtitle;
        return _react3.default.createElement(
            _reactNative.View,
            {
                style: {
                    flex: 1,
                    alignItems: 'flex-start',
                    justifyContent: 'center',
                    marginTop: _styles.marginHeader,
                    marginLeft: 15
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 16
                }
            },
            _react3.default.createElement(
                _nativeBase.Text,
                {
                    style: {
                        color: 'white',
                        fontWeight: 'bold',
                        fontSize: 18
                    },
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 17
                    }
                },
                title
            ),
            _react3.default.createElement(
                _nativeBase.Text,
                {
                    style: {
                        color: 'white',
                        fontSize: 14
                    },
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 18
                    }
                },
                subtitle
            )
        );
    };

    var PendingView = function PendingView() {
        return _react3.default.createElement(
            _reactNative.View,
            {
                style: {
                    flex: 1,
                    backgroundColor: 'lightgreen',
                    justifyContent: 'center',
                    alignItems: 'center'
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 23
                }
            },
            _react3.default.createElement(
                _nativeBase.Text,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 31
                    }
                },
                "Waiting"
            )
        );
    };

    var CertifyQRScreen = _wrapComponent("CertifyQRScreen")((_temp2 = _class = function (_React$Component) {
        _inherits(CertifyQRScreen, _React$Component);

        function CertifyQRScreen() {
            var _ref2;

            var _temp, _this, _ret;

            _classCallCheck(this, CertifyQRScreen);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = CertifyQRScreen.__proto__ || Object.getPrototypeOf(CertifyQRScreen)).call.apply(_ref2, [this].concat(args))), _this), _this.showAbout = function (e) {
                console.log(e);
                console.log(e.type);
                console.log(e.data);
                alert("Barcode Found!", "Type: " + e.type + "\nData: " + e.data);
            }, _temp), _possibleConstructorReturn(_this, _ret);
        }

        _createClass(CertifyQRScreen, [{
            key: "render",
            value: function render() {
                var _this2 = this;

                return _react3.default.createElement(
                    _nativeBase.Container,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 63
                        }
                    },
                    _react3.default.createElement(
                        _nativeBase.Content,
                        {
                            contentContainerStyle: {
                                flex: 1,
                                flexDirection: 'column'
                            },
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 64
                            }
                        },
                        _react3.default.createElement(
                            _reactNativeCamera.RNCamera,
                            {
                                ref: function ref(_ref3) {
                                    _this2.camera = _ref3;
                                },
                                style: {
                                    flex: 1,
                                    justifyContent: 'center',
                                    alignItems: 'center'
                                },
                                autoFocus: _reactNativeCamera.RNCamera.Constants.AutoFocus.on,
                                type: _reactNativeCamera.RNCamera.Constants.Type.back,
                                flashMode: _reactNativeCamera.RNCamera.Constants.FlashMode.off,
                                onBarCodeRead: this.showAbout,
                                barCodeTypes: [_reactNativeCamera.RNCamera.Constants.BarCodeType.qr],
                                notAuthorizedView: _react3.default.createElement(
                                    _reactNative.View,
                                    {
                                        style: _styles.settingsStyles.content,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 82
                                        }
                                    },
                                    _react3.default.createElement(
                                        _nativeBase.Text,
                                        {
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 82
                                            }
                                        },
                                        "pruebaaa"
                                    )
                                ),
                                pendingAuthorizationView: _react3.default.createElement(PendingView, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 83
                                    }
                                }),
                                permissionDialogTitle: null,
                                permissionDialogMessage: null,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 68
                                }
                            },
                            _react3.default.createElement(
                                _nativeBase.Button,
                                {
                                    onPress: function onPress() {
                                        return _this2.props.navigation.push('CertifyRF');
                                    },
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 88
                                    }
                                },
                                _react3.default.createElement(
                                    _nativeBase.Text,
                                    {
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 89
                                        }
                                    },
                                    "Reconocimiento"
                                )
                            ),
                            _react3.default.createElement(_reactNative.View, {
                                style: {
                                    borderWidth: 5,
                                    height: widthscreen / 1.3,
                                    width: widthscreen / 1.3
                                },
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 91
                                }
                            })
                        )
                    )
                );
            }
        }]);

        return CertifyQRScreen;
    }(_react3.default.Component), _class.navigationOptions = function (_ref4) {
        var navigation = _ref4.navigation;
        return {
            headerTitle: _react3.default.createElement(CustomHeader, {
                title: "Certificar presencia",
                subtitle: "prueba",
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 38
                }
            }),
            headerStyle: {
                backgroundColor: _styles.darkGreen,
                height: _styles.headerHeight
            },
            headerTitleStyle: {
                color: 'white'
            },
            headerLeft: _react3.default.createElement(
                _reactNative.TouchableOpacity,
                {
                    style: {
                        padding: 20,
                        marginTop: _styles.marginHeader
                    },
                    transparent: true,
                    onPress: function onPress() {
                        return navigation.openDrawer();
                    },
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 47
                    }
                },
                _react3.default.createElement(_nativeBase.Icon, {
                    style: {
                        color: 'white'
                    },
                    name: "menu",
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 48
                    }
                })
            )
        };
    }, _temp2));

    exports.default = CertifyQRScreen;
});